# Developer: Jinglu Han
# mailbox: admin@de-manufacturing.cn

# Step 1: Use a lightweight, ARM64-compatible Python base image
FROM --platform=linux/arm64 python:3.10-slim-bookworm

# Step 2: Set environment variables to prevent interactive prompts
ENV DEBIAN_FRONTEND=noninteractive

# Step 3: Install essential system dependencies for building and running
# - build-essential: For compiling code
# - cmake, git: For building some Python packages from source
# - libjpeg-dev, zlib1g-dev: For Pillow (image processing)
# - libopencv-dev: For OpenCV
RUN rm -f /etc/apt/sources.list.d/* && \
    { \
        echo "deb http://mirrors.aliyun.com/debian/ bookworm main"; \
        echo "deb http://mirrors.aliyun.com/debian-security/ bookworm-security main"; \
        echo "deb http://mirrors.aliyun.com/debian/ bookworm-updates main"; \
    } > /etc/apt/sources.list && \
    apt-get update && apt-get install -y --no-install-recommends \
    build-essential \
    cmake \
    git \
    libjpeg-dev \
    zlib1g-dev \
    libopencv-dev \
    && rm -rf /var/lib/apt/lists/*

# Step 4: Install PaddlePaddle, PaddleOCR, and other Python dependencies
# We install them in a single command to let pip resolve dependencies correctly.
RUN pip install --no-cache-dir -i https://pypi.tuna.tsinghua.edu.cn/simple \
    "paddlepaddle" \
    "paddleocr==3.1.0" \
    fastapi \
    uvicorn \
    python-multipart \
    Pillow \
    opencv-python-headless

# Step 6: Set the working directory
WORKDIR /app

# Step 7: Copy the application code into the container
COPY ./main.py /app/main.py

# Step 8: Expose the port the app runs on
EXPOSE 8080

# Step 9: Define the command to run the application
CMD ["uvicorn", "main:app", "--host", "0.0.0.0", "--port", "8080", "--workers", "1"]
